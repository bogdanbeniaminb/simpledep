name: Downgraded Release

on:
  push:
    tags:
      - "*"

jobs:
  downgrade_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: none

      - name: Install composer dependencies
        run: |
          composer install --no-progress --no-suggest --no-interaction --no-scripts --no-dev

      - name: get rector to "rector-local" directory, to avoid downgrading itself in the /vendor
        run: |
          mkdir rector-local
          composer require --dev rector/rector --working-dir rector-local

      - name: downgrade to PHP 7.4
        run: |
          rector-local/vendor/bin/rector process bin src vendor --config build/rector-downgrade-php-74.php --ansi

      # restore build php version
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: none

      # clear the dev files
      - run: rm -rf tests phpstan.dist.neon phpunit.xml .gitignore .editorconfig .github .prettierrc .prettierignore package.json package-lock.json

      # copy PHP 7.4 composer + workflows
      - run: cp -r build/target-repository/. .

      # clear the dev files
      - run: rm -rf build rector.php

      # setup git user
      - run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"

      # publish to the same repository with a new tag
      # see https://tomasvotruba.com/blog/how-to-release-php-81-and-72-package-in-the-same-repository/
      - name: "Tag Downgraded Code"
        run: |
          # separate a "git add" to add untracked (new) files too
          git add --all
          git commit -m "release PHP 7.4 downgraded"

          # force push tag, so there is only 1 version
          git tag "${GITHUB_REF#refs/tags/}" --force
          git push origin "${GITHUB_REF#refs/tags/}" --force
